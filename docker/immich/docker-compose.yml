name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    extends:
      file: hwaccel.transcoding.yml
      service: nvenc
    user: 2000:2000
    volumes:
      - ${UPLOAD_LOCATION}:/data
      - /etc/localtime:/etc/localtime:ro
    environment: # stupid portainer workaround for env_file being impossible for gitops
      - UPLOAD_LOCATION=${UPLOAD_LOCATION}
      - DB_DATA_LOCATION=${DB_DATA_LOCATION}
      - TZ=${TZ}
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - DB_DATABASE_NAME=${DB_DATABASE_NAME}
    ports:
      - "192.168.10.6:2283:2283"
    depends_on:
      - redis
      - database
    restart: always
    labels:
      - "traefik.enable=true"

      # main route
      - "traefik.http.routers.immich.rule=Host(`photos.ottos.party`)"
      - "traefik.http.routers.immich.entrypoints=lan-https,cf-tunnel"

      # aliases route
      - "traefik.http.routers.immich-aliases.rule=HostRegexp(`(immich|gallery)\\.ottos\\.party`)"
      - "traefik.http.routers.immich-aliases.entrypoints=lan-https,cf-tunnel"
      - "traefik.http.routers.immich-aliases.middlewares=immich-alias-redirect"
      - "traefik.http.routers.immich-aliases.service=noop@internal"

      # alias redirect middleware
      - "traefik.http.middlewares.immich-alias-redirect.redirectregex.regex=^.*\\.ottos\\.party(.*)$"
      - "traefik.http.middlewares.immich-alias-redirect.redirectregex.replacement=https://photos.ottos.party$1"
      - "traefik.http.middlewares.immich-alias-redirect.redirectregex.permanent=true"

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-cuda
    extends:
      file: hwaccel.ml.yml
      service: cuda
    volumes:
      - model-cache:/cache
    environment: # stupid portainer workaround for env_file being impossible for gitops
      - UPLOAD_LOCATION=${UPLOAD_LOCATION}
      - DB_DATA_LOCATION=${DB_DATA_LOCATION}
      - TZ=${TZ}
      - IMMICH_VERSION=${IMMICH_VERSION}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - DB_DATABASE_NAME=${DB_DATABASE_NAME}
    restart: always

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:facc1d2c3462975c34e10fccb167bfa92b0e0dbd992fc282c29a61c3243afb11
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:32324a2f41df5de9efe1af166b7008c3f55646f8d0e00d9550c16c9822366b4a
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always

volumes:
  model-cache:
