- hosts: traefik
  tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes

    - name: Ensure dependencies
      ansible.builtin.apt:
        name:
          - tar
          - git
          - openssh-client
        state: present

    - name: Create directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ traefik_folder }}/log"
        - "{{ traefik_folder }}/ssh"

    - name: Generate SSH keypair for Traefik â†’ Docker
      community.crypto.openssh_keypair:
        path: "{{ traefik_folder }}/ssh/id_ed25519"
        type: ed25519
        mode: "0600"
        comment: "traefik@{{ inventory_hostname }}"
      register: traefik_sshkey

    - name: Create SSH config entry for Docker VM
      ansible.builtin.copy:
        dest: /etc/ssh/ssh_config.d/traefik-docker.conf
        mode: "0644"
        content: |
          Host docker-vm
            HostName {{ hostvars['docker-vm']['ansible_host'] }}
            User {{ hostvars['docker-vm']['ansible_user'] }}
            IdentityFile {{ traefik_folder }}/ssh/id_ed25519
            IdentitiesOnly yes
            StrictHostKeyChecking accept-new

    - name: Authorize Traefik public key on Docker VM user
      ansible.builtin.authorized_key:
        user: "{{ hostvars['docker-vm']['ansible_user'] }}"
        key: "{{ traefik_sshkey.public_key }}"
        state: present
      delegate_to: docker-vm

    - name: Render static config
      ansible.builtin.template:
        src: "../traefik/traefik.yml.j2"
        dest: "{{ traefik_folder }}/traefik.yml"
      notify: Restart traefik

    - name: Render dynamic configs
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ traefik_folder }}/conf.d/{{ item | basename | replace('.j2', '') }}"
      with_fileglob:
        - "../traefik/conf.d/*.j2"

    - name: Ensure acme.json exists and locked down
      ansible.builtin.file:
        path: "{{ traefik_folder }}/acme.json"
        state: touch
        mode: "0600"
        modification_time: preserve
        access_time: preserve

    - name: Download and extract Traefik
      ansible.builtin.unarchive:
        src: "https://github.com/traefik/traefik/releases/download/v3.5.1/traefik_v3.5.1_linux_amd64.tar.gz"
        include: [ "traefik" ]
        dest: /usr/bin
        remote_src: yes

    - name: Create systemd service
      ansible.builtin.copy:
        dest: /etc/systemd/system/traefik.service
        content: |
          [Unit]
          Description=Traefik: The Cloud Native Edge Router
          ConditionFileIsExecutable=/usr/bin/traefik
          After=syslog.target network-online.target

          [Service]
          Type=notify
          StartLimitInterval=5
          StartLimitBurst=10
          ExecStart=/usr/bin/traefik
          StandardOutput=file:{{ traefik_folder }}/log/traefik.out
          StandardError=file:{{ traefik_folder }}/log/traefik.err
          Restart=always
          RestartSec=10
          ExecReload=/bin/kill -USR1 $MAINPID
          Environment="CF_DNS_API_TOKEN={{ cloudflare_dns_api_token }}"

          [Install]
          WantedBy=multi-user.target
      register: service_config

    - name: Reload systemd if traefik service file changed
      ansible.builtin.systemd:
        daemon_reload: yes
      when: service_config.changed

    - name: Start and enable Traefik service
      ansible.builtin.systemd:
        name: traefik
        enabled: yes
        state: started

  handlers:
    - name: Restart traefik
      ansible.builtin.systemd:
        name: traefik
        state: restarted
